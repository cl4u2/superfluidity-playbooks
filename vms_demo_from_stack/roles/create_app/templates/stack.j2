heat_template_version: 2014-10-16

description: Simple template to deploy 2 VMs and a network

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for the kuryr nodes
  flavor:
    type: string
    label: Flavor
    description: Flavor to be used
    default: m1.small
  public_net:
    type: string
    description: public network for the instances
    default: public
  vm_net_cidr:
    type: string
    description: vm_net network address (CIDR notation)
  vm_net_gateway:
    type: string
    description: vm_net network gateway address

resources:
  vm_net:
    type: OS::Neutron::Net
    properties:
      name: vm_net

  vm_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: vm_net }
      cidr: { get_param: vm_net_cidr }
      gateway_ip: { get_param: vm_net_gateway }

  net_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_vm_iface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: net_router }
      subnet_id: { get_resource: vm_subnet }

  vm_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: vm_sg
      description: Ping and SSH
      rules:
      - protocol: icmp
      - ethertype: IPv4
        remote_mode: remote_group_id
      - ethertype: IPv6
        remote_mode: remote_group_id
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22


resources:
  instance_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: vm_net }
      security_groups:
        - { get_param: vm_sg }
      fixed_ips:
        - subnet: { get_param: vm_subnet }

  instance_fip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: instance_port }

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: instance_port }
